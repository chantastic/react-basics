# Component functions

Finally, we're out of the boilerplate and we can write React!

When you heard about React, you probably heard "it does components."
It does.
But writing components can be so subtle, you might miss.

```js
function Greeting() {
  return <div>Hello!</div>;
}
```

BOOM!
A React component.

"Wait, isn't that just JSX `React.createElement` wrapped in a function named Greeting?"

If you are saying that, I'm so proud of you.
That's __exactly__ what's happening.

`React.createElement` is clever.
In addition to a string, it takes a function as the first argument.
Meaning we can create a React Element from our `Greeting` function.

```js
var element = React.createElement(Greeting);
```

But we're using JSX, so it looks like this:

```js
var element = <Greeting />;
```

Against all the odds, you made your first React component.
It doesn't do much but it's all yours.
We'll make it a little more lively with `props`.

### Kick the tires
* If you didn't use JSX, do it this chapter.
* Toy with the name of the `Greeting` component. Can the name start with a lowercase letter? Can it have underscores?
