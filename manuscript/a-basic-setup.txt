# A Basic Setup

*Copy and paste this snippet into a file titled index.html.* Open it in a browser to see a basic working React app.

```html
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <script src="https://fb.me/react-15.0.2.js"></script>
  <script src="https://fb.me/react-dom-15.0.2.js"></script>
</head>
<body>
  <div id="root"></div>

  <script>
    ReactDOM.render(
      React.createElement("h1", { children: "Hi there" }),
      document.getElementById("root")
    );
  </script>
</body>
</html>
```

# A Basic Setup (explained)

The bulk of this is a run-of-the-mill HTML file with linked JavaScript.

There are three main sections.

## React and ReactDOM script tags

In the *head* of our HTML file, we're including versions of *react* and *react-dom*.

```html
<script src="https://unpkg.com/react@15.3.2/dist/react.js"></script>
<script src="https://unpkg.com/react-dom@15.3.2/dist/react-dom.js"></script>
```

*react-dom* is a small library, used to connect React Elements to a web page.
This little snippet is the only place we'll use *ReactDOM* in this book.

*react.js* is the the subject of this book.

## A Single Element

Every React app needs a single DOM element to attach to.
Ours is a *div* with the id *"root"*.
It can be anything but this is a common convention you'll see in a lot of code.

```html
<div id="root"></div>
```

## A Script Tag with React App

Finally, we get to the meat of our React app, the place we'll spend a little time.

```html
<script>
  ReactDOM.render(
    React.createElement("h1", { children: "Hi there" }),
    document.getElementById("root")
  )
</script>
```

We're using *ReactDOM.render()* to attach a React Element to the DOM element we created.
It's not critical that you understand all of this yet.
That's the focus of the next chapter.
