# Events

Events are how we respond to user interaction.
A user can click, scroll, swipe, hover, etc.
When they do so on interested elements, we want to handle that.

Let's create a new `ClickCounter` component.
Every time it's clicked, it should alert the number of times it's been clicked.

```js
const ClickCounter = () => (
  <div onClick={() => alert('1')}>
    (clicks: 0)
  </div>
)
```

Let's change our `element` assignment to use the `ClickCounter` instead of the `Greeting` component.

```js
const element = <ClickCounter />;
```

Keep `Greeting` around.
It'll come in handy later.

Now click the new component.
You'll notice that it doesn't do a great job of counting.
It always displays `0` and always alerts `1`.
That's half of what we need, if we only click it once.

We're going to fix this.
But first, we need talk the second type of React component: component class.
