# ReactDOM.render

It's weird that we have to load three script to work with React.

Here's why:

React can be used to write web apps, server-side apps, native apps, VR experiences, 3D games, terminal programs, and on and on.
It can be a lot of places.
To keep the library focused, companion libraries exist for each platform.
We're using React in the browser.
So, `react-dom` is the library for us.

`react-dom` only has three functions.
Even better, you only need to know one: `ReactDOM.render()`.
It's the one that takes a React Element and puts it in the browser DOM.
It takes two arguments to do that.

```js
ReactDOM.render(element, container);
```

Ignore `element`, for now.
Let's focus on the the `container`.

I'm grabbing a reference to an empty div with the id "root".

```js
var container = document.getElementById("root");
```

`ReactDOM.render()` can render into any DOM element container.
`div#root` is a common convention but the exact `id` is unimportant.

### Kick the tires
* Change the DOM element to use a different `id` or tag.
* Create a second DOM element (with a unique id). Use `ReactDOM.render` a second time to render the same element into the second container.
* __Advanced:__ Add an `id` key to the object. How does it get rendered in the DOM?
