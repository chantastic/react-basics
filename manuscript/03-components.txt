# Components

I'm going to be talk about "components." They're all the rage, right?

Well keep an watchful eye because it kinda looks like React components are just functions.

# Making Components

Making components is easy. Let's make a React component of our React Element that displays "Hi" in an `h1`.

Create a new variable named `Greeting`. Greeting is a function that returns our React element.

```
var Greeting = function () {
  return React.createElement("h1", { children: "Hi" })
}
```

# Rendering Components

To render our component, call `createElement` with `Greeting`.

```
ReactDOM.render(
  React.createElement(Greeting),
  document.getElementById("root")
)
```

All together, it should look like this.

```
var Greeting = function () {
  return React.createElement("h1", { children: "Hi" })
}

ReactDOM.render(
  React.createElement(Greeting),
  document.getElementById("root")
)
```

## createElement takes functions

The big takeaway here is that `createElement` creates React elements from functions as well as string types. We use this to create custom components.

## How do I make it dynamic?

Now you're thinking in React. In the next chapter we'll look at how to use that special object that `createElment` takes to make our custom component more dynamic.
