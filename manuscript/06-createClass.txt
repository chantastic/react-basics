# createClass

## Two types of components

There are two types of components in React.

We've only talked about functional components at this point.
They take props and render a component.
This is beautifully simple.
However, applications need a place to keep state.
The components we've created can't do that.

## Yadda-yadda, blah-blah, backing instance and stuff

Here's a little more jargon.

If we want to keep state in our components.
The components need a backing instance.
If we have instances, we need some type of class to derive all of the instsances from.
This is where `React.createClass` comes in.

## createClass

`React.createClass` gives us a way to create components with a backing instance.
This gives us a place to hang state.

## What's state?

State is data that changes over time.
It's also data that we own.

We'll observe the affects of state by creating a component that responds to click events.
With each click it will increase a local counter and re-render.

## NOTES

* keep Greeting around. we'll need it later. I'm not going to be making any further changes to it.
* render out ClickCounter.
* createClass is the second method for defining components.
  * this is the most complex of the three methods of creating components.
  * i reference is kept, which allows us to keep some state. Here's it's the number of clicks.
* where functional components can only enact on their arguments, elementns created with createClass have a backing instance. all that means is that we can assign and read values from `this`. We'l talk about `this` in the next chapter.

* createClass is a function
  * that takes a specification object
  * required to have at least one property
  * a render function
  * which returns a single React element.

There's a lot there. So I'm going to repeat it, now that you've seen the code.

* createClass is a funcition.
  * it takes an object as it's only argument.
  * the object specifies the component.
  * the specification object MUST have a render function
  * that render function must return a ReactElement.

* crateClass
  * object
    * render
      * ReactEelement


## CODE

```
var ClickCounter = React.creatClass({
  render: function () {
    return <div>clicks: 0</div>
  }
})

ReactDOM.render(
  <ClickCounter />,
  document.getElementById("root")
)
```
