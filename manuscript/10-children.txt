# children

## NOTES

* Now we have two components, a stateful click counter and a stateless greeting.
* Currently, we're only rendering the click counter.
* I'd like to render the click counter around the greeting. So, I can click how many times I've clicked on my name. Super vein, I know.
* We know that JSX allows us two wrap other components. Let's try it and see what happens.
* Now, React took our child element and put it on `props` for us.
  * We need to tell our component where to render children, when we have them.
  * I'm going to render them right above the click counter

## RESOURCES

## CODE

```
var ClickCounter = React.creatClass({
  getInitialState: function () {
    return { clicks: 0 }
  },

  handleClick: function () {
     this.setState({ clicks: this.state.clicks + 1 })
  },

  render: function () {
    return <div onClick={this.handleClick}>
      clicks: {this.state.clicks}
    </div>
  }
})

var Greeting = function (props) {
  return <div>{props.name}</div>
}

ReactDOM.render(
  <ClickCounter>
    <Greeting name="Michael Chan" />
  </ClickCounter>,
  document.getElementById("root")
)
```

```
var ClickCounter = React.creatClass({
  getInitialState: function () {
    return { clicks: 0 }
  },

  handleClick: function () {
     this.setState({ clicks: this.state.clicks + 1 })
  },

  render: function () {
    return <div onClick={this.handleClick}>
      {this.props.children}
      clicks: {this.state.clicks}
    </div>
  }
})

var Greeting = function (props) {
  return <div>{props.name}</div>
}

ReactDOM.render(
  <ClickCounter>
    <Greeting name="Michael Chan" />
  </ClickCounter>,
  document.getElementById("root")
)
```
