# JSX

`React.createElement` does everything we need *but* this syntax can become cumbersome.

This brings us to our third included script tag: `babel`.

"Wait, what's JSX got to do with Babel?"

That's a great question.

## What's JSX?

JSX is way to let the computer write all the `React.creatElement()` functions.
You get to write in JSX, which looks like HTML.

Here's what our function looks like in JSX vs JavaScript.

```js
// JavaScript
React.createElement("h1", { children: "Hello!" });
```

```js
// JSX
<h1>Hello!</h1>;
```

## How does it work?

JSX is not valid JavaScript.
It has to be transformed into `React.createElement()` calls before the browser can use it.
It works in these examples because of this line:

```html
    <script type="text/babel">
```

Our script tag is being interpreted as Babel and transformed to JavaScript.

Think of it as a function that's run on your code:

```js
Babel.transform("<h1>Hello!</h1>");
// => React.createElement("h1", {children: "Hello!"})
```

## What's Babel and why is JSX inside of it?

Babel is a general purpose transformer for JavaScript.
It takes syntax of one form and makes it something browsers can execute.
It's used to primarily to take new (or experimental) JavaScript features and make them work in legacy browsers.
In version 5, JSX was included in Babel by default.
It makes examples like this very simple to setup.
But once you start writing real apps, you'll need something more robust.

## So, why are we talking about JSX?

JSX is the linga franca of React.
Most importantly, React documentation is written in JSX.
You must know the relationship between JSX and React to be successful in React.
That said, *it's completely optional*.

When I started writing React,
I couldn't use JSX.
It was too complicated to setup in my Rails app.
So, I used function calls.
Today, I use JSX for everything.
I find it a much more enjoyable authoring experience.

The rest of this book will use JSX.

### Kick the tires
* If havent already, change our `React.createElement()` call to JSX.
